{"version":3,"file":"static/js/494.f06f9bfc.chunk.js","mappings":"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","sources":["components/views/contactsView/CreateContactForm/CreateContactForm.styled.js","components/views/contactsView/ContactsList/ContactsList.styled.js","components/views/contactsView/CreateContactForm/CreateContactForm.jsx","components/views/contactsView/Contact/Contact.styled.js","components/views/contactsView/Contact/Contact.jsx","components/views/contactsView/ContactsList/ContactsList.jsx","components/views/contactsView/Filter/Filter.styled.js","components/views/contactsView/Filter/Filter.jsx","views/ContactsView.jsx"],"sourcesContent":["// import { ButtonStyled } from 'components/common/Button';\nimport styled from 'styled-components';\n\nexport const CreateContactFormStyled = styled.form`\n  display: flex;\n  flex-direction: column;\n\n  gap: 30px;\n  width: 300px;\n`;\n\n// const CreateContactButton = styled(ButtonStyled)`\n//   background-color: ${({ disabled }) => disabled && 'transparent'};\n// `;\n","import styled from 'styled-components';\n\nexport const ContactsListStyled = styled.ul`\n  display: grid;\n  grid-template-columns: minmax(300px, 1fr);\n  padding: 0 4px;\n  gap: 12px;\n\n  max-width: 300px;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints[1]}) {\n    gap: 20px;\n    /* grid-template-columns: 1fr 1fr; */\n  }\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints[2]}) {\n    /* grid-template-columns: 1fr 1fr 1fr; */\n    gap: 30px;\n  }\n`;\n\nexport const CreateContactFormLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n\n  > p {\n    color: ${({ theme }) => theme.colors.main};\n  }\n`;\n","import { Button } from '@mui/material';\nimport { LoadingIcon } from 'components/common';\n\nimport { CreateContactFormStyled } from './CreateContactForm.styled';\nimport PropTypes from 'prop-types';\nimport { CreateContactFormLabel } from '../ContactsList/ContactsList.styled';\n\nexport const CreateContactForm = ({ onSubmit, isCreating }) => {\n  return (\n    <CreateContactFormStyled onSubmit={onSubmit} autoComplete=\"off\">\n      <CreateContactFormLabel>\n        <p>Name</p>\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. e.g. Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </CreateContactFormLabel>\n\n      <CreateContactFormLabel>\n        <p>Number</p>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and may start with +\"\n          required\n        />\n      </CreateContactFormLabel>\n\n      <Button type=\"submit\" variant=\"contained\" disabled={isCreating}>\n        {isCreating && <LoadingIcon />}\n        Create Contact\n      </Button>\n    </CreateContactFormStyled>\n  );\n};\n\nCreateContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  isCreating: PropTypes.bool.isRequired,\n};\n","import { ButtonStyled } from 'components/common/Button';\nimport styled from 'styled-components';\n\nexport const ContactStyled = styled.li`\n  position: relative;\n  display: flex;\n  align-items: center;\n  gap: 12px;\n\n  padding: 4px 16px 4px 4px;\n  background-color: ${({ theme }) => theme.colors.bg};\n`;\n\nexport const ContactEditName = styled.input`\n  width: 55%;\n  color: ${({ theme }) => theme.colors.input.fg};\n  background-color: transparent;\n  border: none;\n`;\n\nexport const ContactEditNumber = styled.input`\n  width: 40%;\n  color: ${({ theme }) => theme.colors.input.fg};\n  background-color: transparent;\n  border: none;\n`;\n\nexport const DeleteContactButton = styled(ButtonStyled)`\n  position: absolute;\n  top: -8px;\n  right: -12px;\n`;\n","import {\n  useDeleteContactMutation,\n  useUpdateContactMutation,\n} from 'redux/contacts';\n\nimport {\n  ContactEditName,\n  ContactEditNumber,\n  ContactStyled,\n  DeleteContactButton,\n} from './Contact.styled';\nimport { AiOutlineClose } from 'react-icons/ai';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\n\nexport const Contact = ({ id, name, number }) => {\n  const [updateContact, { isLoading: isUpdating }] = useUpdateContactMutation();\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n\n  const [localName, setLocalName] = useState(name);\n  const [localNumber, setLocalNumber] = useState(number);\n\n  const onSubmitEdit = e =>\n    updateContact({ id, [e.target.name]: e.target.value });\n\n  const onDeleteContact = () => deleteContact(id);\n\n  const disabled = isUpdating || isDeleting;\n\n  return (\n    <ContactStyled>\n      <ContactEditName\n        type=\"text\"\n        name=\"name\"\n        value={localName}\n        onChange={e => setLocalName(e.target.value)}\n        onBlur={onSubmitEdit}\n        disabled={disabled}\n      />\n\n      <ContactEditNumber\n        type=\"tel\"\n        name=\"number\"\n        value={localNumber}\n        onChange={e => setLocalNumber(e.target.value)}\n        onBlur={onSubmitEdit}\n        disabled={disabled}\n      />\n\n      <DeleteContactButton onClick={onDeleteContact} disabled={disabled}>\n        <AiOutlineClose size={20} />\n      </DeleteContactButton>\n    </ContactStyled>\n  );\n};\n\nContact.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import { ContactsListStyled } from './ContactsList.styled';\nimport { Contact } from '../Contact';\nimport PropTypes from 'prop-types';\n\nexport const ContactsList = ({ contacts }) =>\n  console.log(contacts) || (\n    <ContactsListStyled>\n      {contacts.map(({ id, name, number }) => (\n        <Contact key={id} id={id} name={name} number={number} />\n      ))}\n    </ContactsListStyled>\n  );\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n};\n","import { LoadingIcon } from 'components/common';\nimport { ButtonStyled } from 'components/common/Button';\nimport styled from 'styled-components';\n\nexport const FilterStyled = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n`;\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  max-width: 280px;\n`;\n\nexport const FilterInput = styled.input`\n  width: 100%;\n  font-size: inherit;\n  padding: 4px;\n  color: ${({ theme }) => theme.colors.input.fg};\n  background-color: ${({ theme }) => theme.colors.input.bg};\n`;\n\nexport const ClearFilterButton = styled(ButtonStyled)`\n  color: ${({ theme: { colors } }) => colors.button.secondary.fg};\n  background-color: ${({ theme: { colors } }) => colors.button.secondary.bg};\n`;\n\nexport const LoadingIconAbsolute = styled(LoadingIcon).attrs({\n  width: 30,\n  height: 20,\n})`\n  position: absolute;\n  right: -38px;\n`;\n\nexport const FilterDescription = styled.p`\n  margin-bottom: 20px;\n`;\n","import {\n  ClearFilterButton,\n  FilterInput,\n  FilterLabel,\n  FilterStyled,\n  LoadingIconAbsolute,\n} from './Filter.styled';\n\nimport PropTypes from 'prop-types';\n\nexport const Filter = ({ filter, setFilter, isFetching }) => {\n  const onSetFilter = e => setFilter(e.target.value);\n  const clearFilter = () => setFilter('');\n\n  return (\n    <FilterStyled>\n      <FilterLabel>\n        <FilterInput value={filter} onChange={onSetFilter} />\n      </FilterLabel>\n\n      <ClearFilterButton onClick={clearFilter}>Clear</ClearFilterButton>\n\n      {isFetching && <LoadingIconAbsolute />}\n    </FilterStyled>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  setFilter: PropTypes.func.isRequired,\n  isFetching: PropTypes.bool.isRequired,\n};\n","import { useCallback, useEffect, useMemo, useState } from 'react';\n\nimport {\n  getVisibleContacts,\n  useCreateContactMutation,\n  useReadContactsQuery,\n} from 'redux/contacts';\nimport { useLang } from 'hooks';\n\nimport { AiFillPlusCircle } from 'react-icons/ai';\n\nimport { Container, Modal, Section } from 'components/common';\nimport {\n  ContactsList,\n  CreateContactForm,\n  Filter,\n} from 'components/views/contactsView';\nimport { FilterDescription } from 'components/views/contactsView/Filter/Filter.styled';\n\nimport styled from 'styled-components';\n\nimport { Button } from '@mui/material';\nimport { toast } from 'react-toastify';\nconst ContactsContainer = styled(Container)``;\n\nconst FilterContainer = styled.div`\n  display: flex;\n  gap: 50px;\n  margin-bottom: 30px;\n`;\n\nconst ContactsView = () => {\n  const { data: contacts, isFetching } = useReadContactsQuery();\n  const [createContact, { isLoading: isCreating, isSuccess: isCreated }] =\n    useCreateContactMutation();\n\n  const [showModal, setShowModal] = useState(false);\n  const toggleModal = useCallback(() => setShowModal(!showModal), [showModal]);\n\n  useEffect(() => {\n    if (!isCreated) return;\n    toast.success('Contact created');\n  }, [isCreated]);\n\n  const lang = useLang();\n\n  const [filter, setFilter] = useState('');\n  const visibleContacts = useMemo(\n    () => getVisibleContacts(contacts, filter),\n    [contacts, filter]\n  );\n\n  const onSubmitCreateContact = useCallback(\n    e => {\n      e.preventDefault();\n      const form = e.target;\n      const name = form.elements.name.value.trim();\n      const number = form.elements.number.value.trim();\n\n      if (!name || !number) {\n        return toast.error('Please fill name and phone');\n      }\n\n      createContact({ name, number });\n      form.reset();\n      toggleModal();\n    },\n    [createContact, toggleModal]\n  );\n\n  return (\n    <Section>\n      <ContactsContainer>\n        <h1>{lang.contactsView.title}</h1>\n\n        <FilterDescription>{lang.contactsView.filterDesc}</FilterDescription>\n\n        <FilterContainer>\n          <Filter\n            isFetching={isFetching}\n            filter={filter}\n            setFilter={setFilter}\n          />\n\n          <Button\n            color=\"info\"\n            variant=\"contained\"\n            endIcon={<AiFillPlusCircle size={24} />}\n            onClick={toggleModal}\n          >\n            <span>Create contact</span>\n          </Button>\n        </FilterContainer>\n\n        <Modal showModal={showModal} toggleModal={toggleModal}>\n          <CreateContactForm\n            onSubmit={onSubmitCreateContact}\n            isCreating={isCreating}\n          />\n        </Modal>\n\n        {contacts && <ContactsList contacts={visibleContacts} />}\n      </ContactsContainer>\n    </Section>\n  );\n};\n\nContactsView.propTypes = {};\n\nexport default ContactsView;\n"],"names":["CreateContactFormStyled","styled","ContactsListStyled","theme","breakpoints","CreateContactFormLabel","colors","main","CreateContactForm","onSubmit","isCreating","autoComplete","type","name","pattern","title","required","Button","variant","disabled","ContactStyled","bg","ContactEditName","input","fg","ContactEditNumber","DeleteContactButton","ButtonStyled","Contact","id","number","useUpdateContactMutation","updateContact","isUpdating","isLoading","useDeleteContactMutation","deleteContact","isDeleting","useState","localName","setLocalName","localNumber","setLocalNumber","onSubmitEdit","e","target","value","onChange","onBlur","onClick","size","ContactsList","contacts","console","log","map","FilterStyled","FilterLabel","FilterInput","ClearFilterButton","button","secondary","LoadingIconAbsolute","LoadingIcon","attrs","width","height","FilterDescription","Filter","filter","setFilter","isFetching","ContactsContainer","Container","FilterContainer","useReadContactsQuery","data","useCreateContactMutation","createContact","isCreated","isSuccess","showModal","setShowModal","toggleModal","useCallback","useEffect","toast","lang","useLang","visibleContacts","useMemo","getVisibleContacts","onSubmitCreateContact","preventDefault","form","elements","trim","reset","contactsView","filterDesc","color","endIcon"],"sourceRoot":""}