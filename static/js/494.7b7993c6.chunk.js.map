{"version":3,"file":"static/js/494.7b7993c6.chunk.js","mappings":"4SAGaA,EAA0BC,EAAAA,GAAAA,KAAH,sGCDvBC,EAAqBD,EAAAA,GAAAA,GAAH,wWAQG,qBAAGE,MAAkBC,YAAY,MAKjC,qBAAGD,MAAkBC,YAAY,MAMtDC,EAAyBJ,EAAAA,GAAAA,MAAH,sGAKtB,qBAAGE,MAAkBG,OAAOC,Q,UCnB5BC,EAAoB,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,WAAYC,EAAW,EAAXA,KACxD,OACE,UAACX,EAAD,CAAyBS,SAAUA,EAAUG,aAAa,MAA1D,WACE,UAACP,EAAD,YACE,uBAAIM,EAAKE,aAAaC,kBAAkBC,aACxC,kBACEC,KAAK,OACLC,KAAK,OACLC,QAAQ,yHACRC,MAAM,4GACNC,UAAQ,QAIZ,UAACf,EAAD,YACE,uBAAIM,EAAKE,aAAaC,kBAAkBO,eACxC,kBACEL,KAAK,MACLC,KAAK,SACLC,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAIZ,UAACE,EAAA,EAAD,CAAQN,KAAK,SAASO,QAAQ,YAAYC,SAAUd,EAApD,UACGA,IAAc,SAAC,KAAD,IACdC,EAAKE,aAAaY,gC,oBC/BdC,EAAgBzB,EAAAA,GAAAA,GAAH,iKAOJ,qBAAGE,MAAkBG,OAAOqB,MAGrCC,EAAkB3B,EAAAA,GAAAA,MAAH,yGAEjB,qBAAGE,MAAkBG,OAAOuB,MAAMC,MAKhCC,EAAoB9B,EAAAA,GAAAA,MAAH,yGAEnB,qBAAGE,MAAkBG,OAAOuB,MAAMC,MAKhCE,GAAsB/B,EAAAA,EAAAA,IAAOgC,EAAAA,EAAPhC,CAAH,wGAIV,qBAAGE,MAAkBG,OAAOqB,MChBrCO,EAAU,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,GAAIlB,EAAmB,EAAnBA,KAAMmB,EAAa,EAAbA,OAClC,GAAmDC,EAAAA,EAAAA,MAAnD,eAAOC,EAAP,KAAmCC,EAAnC,KAAwBC,UACxB,GAAmDC,EAAAA,EAAAA,MAAnD,eAAOC,EAAP,KAAmCC,EAAnC,KAAwBH,UAExB,GAAkCI,EAAAA,EAAAA,UAAS3B,GAA3C,eAAO4B,EAAP,KAAkBC,EAAlB,KACA,GAAsCF,EAAAA,EAAAA,UAASR,GAA/C,eAAOW,EAAP,KAAoBC,EAApB,KAEMC,EAAe,SAAAC,GAAC,OACpBZ,GAAc,QAAEH,GAAAA,GAAKe,EAAEC,OAAOlC,KAAOiC,EAAEC,OAAOC,SAI1C5B,EAAWe,GAAcI,EAE/B,OACE,UAACjB,EAAD,YACE,SAACE,EAAD,CACEZ,KAAK,OACLC,KAAK,OACLmC,MAAOP,EACPQ,SAAU,SAAAH,GAAC,OAAIJ,EAAaI,EAAEC,OAAOC,QACrCE,OAAQL,EACRzB,SAAUA,KAGZ,SAACO,EAAD,CACEf,KAAK,MACLC,KAAK,SACLmC,MAAOL,EACPM,SAAU,SAAAH,GAAC,OAAIF,EAAeE,EAAEC,OAAOC,QACvCE,OAAQL,EACRzB,SAAUA,KAGZ,SAACQ,EAAD,CAAqBuB,QAxBD,kBAAMb,EAAcP,IAwBOX,SAAUA,EAAzD,UACE,SAAC,MAAD,CAAgBgC,KAAM,WC9CjBC,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAC1B,SAACxD,EAAD,UACGwD,EAASC,KAAI,gBAAGxB,EAAH,EAAGA,GAAIlB,EAAP,EAAOA,KAAMmB,EAAb,EAAaA,OAAb,OACZ,SAACF,EAAD,CAAkBC,GAAIA,EAAIlB,KAAMA,EAAMmB,OAAQA,GAAhCD,SCHPyB,EAAe3D,EAAAA,GAAAA,IAAH,yFAMZ4D,EAAc5D,EAAAA,GAAAA,MAAH,0FAMX6D,EAAc7D,EAAAA,GAAAA,MAAH,yHAIb,qBAAGE,MAAkBG,OAAOuB,MAAMC,MACvB,qBAAG3B,MAAkBG,OAAOqB,MAGrCoC,GAAoB9D,EAAAA,EAAAA,IAAOgC,EAAAA,EAAPhC,CAAH,iEACnB,qBAAGE,MAASG,OAAsB0D,OAAOC,UAAUnC,MACxC,qBAAG3B,MAASG,OAAsB0D,OAAOC,UAAUtC,MAG5DuC,GAAsBjE,EAAAA,EAAAA,IAAOkE,EAAAA,IAAaC,MAAM,CAC3DC,MAAO,GACPC,OAAQ,IAFyBrE,CAAH,gEAQnBsE,EAAoBtE,EAAAA,GAAAA,EAAH,gDC3BjBuE,EAAS,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,OAAQC,EAAkC,EAAlCA,UAAWC,EAAuB,EAAvBA,WAAYhE,EAAW,EAAXA,KAItD,OACE,UAACiD,EAAD,YACE,SAACC,EAAD,WACE,SAACC,EAAD,CAAaV,MAAOqB,EAAQpB,SANd,SAAAH,GAAC,OAAIwB,EAAUxB,EAAEC,OAAOC,aASxC,SAACW,EAAD,CAAmBR,QARH,kBAAMmB,EAAU,KAQhC,SACG/D,EAAKE,aAAa4D,OAAOG,yBAG3BD,IAAc,SAACT,EAAD,Q,UCDfW,GAAoB5E,EAAAA,EAAAA,IAAO6E,EAAAA,GAAP7E,CAAH,sBAEjB8E,EAAkB9E,EAAAA,GAAAA,IAAH,gFAgFrB,EA1EqB,WACnB,OAAuC+E,EAAAA,EAAAA,MAAzBtB,EAAd,EAAQuB,KAAgBN,EAAxB,EAAwBA,WACxB,GAAmDO,EAAAA,EAAAA,MAAnD,eAAOC,EAAP,KAAmCzE,EAAnC,KAAwB8B,UAExB,GAAkCI,EAAAA,EAAAA,WAAS,GAA3C,eAAOwC,EAAP,KAAkBC,EAAlB,KACMC,GAAcC,EAAAA,EAAAA,cAAY,kBAAMF,GAAcD,KAAY,CAACA,IAE3DzE,GAAO6E,EAAAA,EAAAA,MAEb,GAA4B5C,EAAAA,EAAAA,UAAS,IAArC,eAAO6B,EAAP,KAAeC,EAAf,KACMe,GAAkBC,EAAAA,EAAAA,UACtB,kBAAMC,EAAAA,EAAAA,IAAmBjC,EAAUe,KACnC,CAACf,EAAUe,IAGPmB,GAAwBL,EAAAA,EAAAA,cAC5B,SAAArC,GACEA,EAAE2C,iBACF,IAAMC,EAAO5C,EAAEC,OACTlC,EAAO6E,EAAKC,SAAS9E,KAAKmC,MAAM4C,OAChC5D,EAAS0D,EAAKC,SAAS3D,OAAOgB,MAAM4C,OAE1C,IAAK/E,IAASmB,EACZ,OAAO6D,EAAAA,GAAAA,MAAY,8BAGrBd,EAAc,CAAElE,KAAAA,EAAMmB,OAAAA,IACtB0D,EAAKI,QACLZ,MAEF,CAACH,EAAeG,IAGlB,OACE,SAAC,KAAD,WACE,UAACT,EAAD,YACE,wBAAKlE,EAAKE,aAAaM,SAEvB,SAACoD,EAAD,UAAoB5D,EAAKE,aAAa4D,OAAO0B,QAE7C,UAACpB,EAAD,YACE,SAACP,EAAD,CACEG,WAAYA,EACZF,OAAQA,EACRC,UAAWA,EACX/D,KAAMA,KAGR,SAACW,EAAA,EAAD,CACE8E,MAAM,OACN7E,QAAQ,YACR8E,SAAS,SAAC,MAAD,CAAkB7C,KAAM,KACjCD,QAAS+B,EAJX,UAME,0BAAO3E,EAAKE,aAAaY,iCAI7B,SAAC,KAAD,CAAO2D,UAAWA,EAAWE,YAAaA,EAA1C,UACE,SAAC9E,EAAD,CACEC,SAAUmF,EACVlF,WAAYA,EACZC,KAAMA,MAIT+C,IAAY,SAACD,EAAD,CAAcC,SAAU+B","sources":["components/views/contactsView/CreateContactForm/CreateContactForm.styled.js","components/views/contactsView/ContactsList/ContactsList.styled.js","components/views/contactsView/CreateContactForm/CreateContactForm.jsx","components/views/contactsView/Contact/Contact.styled.js","components/views/contactsView/Contact/Contact.jsx","components/views/contactsView/ContactsList/ContactsList.jsx","components/views/contactsView/Filter/Filter.styled.js","components/views/contactsView/Filter/Filter.jsx","views/ContactsView.jsx"],"sourcesContent":["// import { ButtonStyled } from 'components/common/Button';\nimport styled from 'styled-components';\n\nexport const CreateContactFormStyled = styled.form`\n  display: flex;\n  flex-direction: column;\n\n  gap: 30px;\n  width: 300px;\n`;\n\n// const CreateContactButton = styled(ButtonStyled)`\n//   background-color: ${({ disabled }) => disabled && 'transparent'};\n// `;\n","import styled from 'styled-components';\n\nexport const ContactsListStyled = styled.ul`\n  display: grid;\n  grid-template-columns: minmax(300px, 1fr);\n  padding: 0 4px;\n  gap: 12px;\n\n  max-width: 300px;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints[1]}) {\n    gap: 20px;\n    /* grid-template-columns: 1fr 1fr; */\n  }\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints[2]}) {\n    /* grid-template-columns: 1fr 1fr 1fr; */\n    gap: 30px;\n  }\n`;\n\nexport const CreateContactFormLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n\n  > p {\n    color: ${({ theme }) => theme.colors.main};\n  }\n`;\n","import { Button } from '@mui/material';\nimport { LoadingIcon } from 'components/common';\n\nimport { CreateContactFormStyled } from './CreateContactForm.styled';\nimport PropTypes from 'prop-types';\nimport { CreateContactFormLabel } from '../ContactsList/ContactsList.styled';\n\nexport const CreateContactForm = ({ onSubmit, isCreating, lang }) => {\n  return (\n    <CreateContactFormStyled onSubmit={onSubmit} autoComplete=\"off\">\n      <CreateContactFormLabel>\n        <p>{lang.contactsView.createContactForm.nameLabel}</p>\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. e.g. Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </CreateContactFormLabel>\n\n      <CreateContactFormLabel>\n        <p>{lang.contactsView.createContactForm.numberLabel}</p>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and may start with +\"\n          required\n        />\n      </CreateContactFormLabel>\n\n      <Button type=\"submit\" variant=\"contained\" disabled={isCreating}>\n        {isCreating && <LoadingIcon />}\n        {lang.contactsView.createContactButtonLabel}\n      </Button>\n    </CreateContactFormStyled>\n  );\n};\n\nCreateContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  isCreating: PropTypes.bool.isRequired,\n  lang: PropTypes.object.isRequired,\n};\n","import { ButtonStyled } from 'components/common/Button';\nimport styled from 'styled-components';\n\nexport const ContactStyled = styled.li`\n  position: relative;\n  display: flex;\n  align-items: center;\n  gap: 12px;\n\n  padding: 4px 16px 4px 4px;\n  background-color: ${({ theme }) => theme.colors.bg};\n`;\n\nexport const ContactEditName = styled.input`\n  width: 55%;\n  color: ${({ theme }) => theme.colors.input.fg};\n  background-color: transparent;\n  border: none;\n`;\n\nexport const ContactEditNumber = styled.input`\n  width: 40%;\n  color: ${({ theme }) => theme.colors.input.fg};\n  background-color: transparent;\n  border: none;\n`;\n\nexport const DeleteContactButton = styled(ButtonStyled)`\n  position: absolute;\n  top: -8px;\n  right: -12px;\n  background-color: ${({ theme }) => theme.colors.bg};\n`;\n","import {\n  useDeleteContactMutation,\n  useUpdateContactMutation,\n} from 'redux/contacts';\n\nimport {\n  ContactEditName,\n  ContactEditNumber,\n  ContactStyled,\n  DeleteContactButton,\n} from './Contact.styled';\nimport { AiOutlineClose } from 'react-icons/ai';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\n\nexport const Contact = ({ id, name, number }) => {\n  const [updateContact, { isLoading: isUpdating }] = useUpdateContactMutation();\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n\n  const [localName, setLocalName] = useState(name);\n  const [localNumber, setLocalNumber] = useState(number);\n\n  const onSubmitEdit = e =>\n    updateContact({ id, [e.target.name]: e.target.value });\n\n  const onDeleteContact = () => deleteContact(id);\n\n  const disabled = isUpdating || isDeleting;\n\n  return (\n    <ContactStyled>\n      <ContactEditName\n        type=\"text\"\n        name=\"name\"\n        value={localName}\n        onChange={e => setLocalName(e.target.value)}\n        onBlur={onSubmitEdit}\n        disabled={disabled}\n      />\n\n      <ContactEditNumber\n        type=\"tel\"\n        name=\"number\"\n        value={localNumber}\n        onChange={e => setLocalNumber(e.target.value)}\n        onBlur={onSubmitEdit}\n        disabled={disabled}\n      />\n\n      <DeleteContactButton onClick={onDeleteContact} disabled={disabled}>\n        <AiOutlineClose size={20} />\n      </DeleteContactButton>\n    </ContactStyled>\n  );\n};\n\nContact.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import { ContactsListStyled } from './ContactsList.styled';\nimport { Contact } from '../Contact';\nimport PropTypes from 'prop-types';\n\nexport const ContactsList = ({ contacts }) => (\n  <ContactsListStyled>\n    {contacts.map(({ id, name, number }) => (\n      <Contact key={id} id={id} name={name} number={number} />\n    ))}\n  </ContactsListStyled>\n);\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n};\n","import { LoadingIcon } from 'components/common';\nimport { ButtonStyled } from 'components/common/Button';\nimport styled from 'styled-components';\n\nexport const FilterStyled = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n`;\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  max-width: 280px;\n`;\n\nexport const FilterInput = styled.input`\n  width: 100%;\n  font-size: inherit;\n  padding: 4px;\n  color: ${({ theme }) => theme.colors.input.fg};\n  background-color: ${({ theme }) => theme.colors.bg};\n`;\n\nexport const ClearFilterButton = styled(ButtonStyled)`\n  color: ${({ theme: { colors } }) => colors.button.secondary.fg};\n  background-color: ${({ theme: { colors } }) => colors.button.secondary.bg};\n`;\n\nexport const LoadingIconAbsolute = styled(LoadingIcon).attrs({\n  width: 30,\n  height: 20,\n})`\n  position: absolute;\n  right: -38px;\n`;\n\nexport const FilterDescription = styled.p`\n  margin-bottom: 20px;\n`;\n","import {\n  ClearFilterButton,\n  FilterInput,\n  FilterLabel,\n  FilterStyled,\n  LoadingIconAbsolute,\n} from './Filter.styled';\n\nimport PropTypes from 'prop-types';\n\nexport const Filter = ({ filter, setFilter, isFetching, lang }) => {\n  const onSetFilter = e => setFilter(e.target.value);\n  const clearFilter = () => setFilter('');\n\n  return (\n    <FilterStyled>\n      <FilterLabel>\n        <FilterInput value={filter} onChange={onSetFilter} />\n      </FilterLabel>\n\n      <ClearFilterButton onClick={clearFilter}>\n        {lang.contactsView.filter.clearFilterButtonLabel}\n      </ClearFilterButton>\n\n      {isFetching && <LoadingIconAbsolute />}\n    </FilterStyled>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  setFilter: PropTypes.func.isRequired,\n  isFetching: PropTypes.bool.isRequired,\n  lang: PropTypes.object.isRequired,\n};\n","import { useCallback, useMemo, useState } from 'react';\n\nimport {\n  getVisibleContacts,\n  useCreateContactMutation,\n  useReadContactsQuery,\n} from 'redux/contacts';\nimport { useLang } from 'hooks';\n\nimport { AiFillPlusCircle } from 'react-icons/ai';\n\nimport { Container, Modal, Section } from 'components/common';\nimport {\n  ContactsList,\n  CreateContactForm,\n  Filter,\n} from 'components/views/contactsView';\nimport { FilterDescription } from 'components/views/contactsView/Filter/Filter.styled';\n\nimport styled from 'styled-components';\n\nimport { Button } from '@mui/material';\nimport { toast } from 'react-toastify';\nconst ContactsContainer = styled(Container)``;\n\nconst FilterContainer = styled.div`\n  display: flex;\n  gap: 50px;\n  margin-bottom: 30px;\n`;\n\nconst ContactsView = () => {\n  const { data: contacts, isFetching } = useReadContactsQuery();\n  const [createContact, { isLoading: isCreating }] = useCreateContactMutation();\n\n  const [showModal, setShowModal] = useState(false);\n  const toggleModal = useCallback(() => setShowModal(!showModal), [showModal]);\n\n  const lang = useLang();\n\n  const [filter, setFilter] = useState('');\n  const visibleContacts = useMemo(\n    () => getVisibleContacts(contacts, filter),\n    [contacts, filter]\n  );\n\n  const onSubmitCreateContact = useCallback(\n    e => {\n      e.preventDefault();\n      const form = e.target;\n      const name = form.elements.name.value.trim();\n      const number = form.elements.number.value.trim();\n\n      if (!name || !number) {\n        return toast.error('Please fill name and phone');\n      }\n\n      createContact({ name, number });\n      form.reset();\n      toggleModal();\n    },\n    [createContact, toggleModal]\n  );\n\n  return (\n    <Section>\n      <ContactsContainer>\n        <h1>{lang.contactsView.title}</h1>\n\n        <FilterDescription>{lang.contactsView.filter.desc}</FilterDescription>\n\n        <FilterContainer>\n          <Filter\n            isFetching={isFetching}\n            filter={filter}\n            setFilter={setFilter}\n            lang={lang}\n          />\n\n          <Button\n            color=\"info\"\n            variant=\"contained\"\n            endIcon={<AiFillPlusCircle size={24} />}\n            onClick={toggleModal}\n          >\n            <span>{lang.contactsView.createContactButtonLabel}</span>\n          </Button>\n        </FilterContainer>\n\n        <Modal showModal={showModal} toggleModal={toggleModal}>\n          <CreateContactForm\n            onSubmit={onSubmitCreateContact}\n            isCreating={isCreating}\n            lang={lang}\n          />\n        </Modal>\n\n        {contacts && <ContactsList contacts={visibleContacts} />}\n      </ContactsContainer>\n    </Section>\n  );\n};\n\nContactsView.propTypes = {};\n\nexport default ContactsView;\n"],"names":["CreateContactFormStyled","styled","ContactsListStyled","theme","breakpoints","CreateContactFormLabel","colors","main","CreateContactForm","onSubmit","isCreating","lang","autoComplete","contactsView","createContactForm","nameLabel","type","name","pattern","title","required","numberLabel","Button","variant","disabled","createContactButtonLabel","ContactStyled","bg","ContactEditName","input","fg","ContactEditNumber","DeleteContactButton","ButtonStyled","Contact","id","number","useUpdateContactMutation","updateContact","isUpdating","isLoading","useDeleteContactMutation","deleteContact","isDeleting","useState","localName","setLocalName","localNumber","setLocalNumber","onSubmitEdit","e","target","value","onChange","onBlur","onClick","size","ContactsList","contacts","map","FilterStyled","FilterLabel","FilterInput","ClearFilterButton","button","secondary","LoadingIconAbsolute","LoadingIcon","attrs","width","height","FilterDescription","Filter","filter","setFilter","isFetching","clearFilterButtonLabel","ContactsContainer","Container","FilterContainer","useReadContactsQuery","data","useCreateContactMutation","createContact","showModal","setShowModal","toggleModal","useCallback","useLang","visibleContacts","useMemo","getVisibleContacts","onSubmitCreateContact","preventDefault","form","elements","trim","toast","reset","desc","color","endIcon"],"sourceRoot":""}