{"version":3,"file":"static/js/941.9cb5d9fd.chunk.js","mappings":"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","sources":["views/UploadView.jsx"],"sourcesContent":["import { useCallback, useEffect, useState } from 'react';\nimport { useLang } from 'hooks';\n\nimport { Container, Section } from 'components/common';\n\nimport styled from 'styled-components';\n\nimport { Button } from '@mui/material';\nimport { toast } from 'react-toastify';\nimport { SectionTitle } from 'components/common/Section/Section.styled';\nimport axios from 'axios';\nimport { useDropzone } from 'react-dropzone';\n\nconst UploadContainer = styled(Container)``;\nconst UploadForm = styled.form`\n  display: flex;\n  flex-direction: column;\n\n  gap: 30px;\n`;\n\nconst { log, error } = console;\n\nconst getColor = ({ isDragAccept, isDragReject, isFocused }) => {\n  if (isFocused) return '#2196f3';\n  if (isDragAccept) return '#00e676';\n  if (isDragReject) return '#ff1755';\n  return '#eeeeee';\n};\n\nconst DropArea = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  min-height: 80px;\n  padding: 20px;\n\n  color: #888888;\n  text-align: center;\n\n  background-color: #fafafa;\n  border: 2px dashed ${props => getColor(props)};\n  outline: none;\n\n  :hover {\n    border-color: ${({ theme }) => theme.colors.accent};\n  }\n\n  transition: border-color ${({ theme }) => theme.transition};\n`;\n\nconst acceptedFileItems = acceptedFiles =>\n  acceptedFiles.map(file => (\n    <li key={file.path}>\n      {console.log(file.path)}\n      {file.path} - {Math.ceil(file.size / 1000)} KB\n    </li>\n  ));\n\nconst rejectedFileItems = rejectedFiles =>\n  rejectedFiles.map(({ file, errors }) => (\n    <li key={file.path}>\n      {console.log({ name: file.name, path: file.path })}\n      {file.path} - {Math.ceil(file.size / 1000)} KB\n      <ul>\n        {errors.map(e => (\n          <li key={e.code}>\n            {console.log(e.code)}\n            {e.message}\n          </li>\n        ))}\n      </ul>\n    </li>\n  ));\n\nconst ThumbsContainer = styled.aside``;\n\nconst ThumbList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  margin-top: 16px;\n`;\n\nconst Thumb = styled.li`\n  display: inline-flex;\n  width: 100px;\n  height: 100px;\n  padding: 4px;\n  margin-right: 8px;\n  margin-bottom: 8px;\n\n  border: 1px solid #eaeaea;\n  border-radius: 2px;\n\n  transition: transform ${({ theme }) => theme.transition};\n\n  :hover,\n  :focus {\n    transform: scale(3);\n  }\n`;\n\nconst ThumbInner = styled.div`\n  display: flex;\n  min-width: 0;\n  overflow: hidden;\n  contain: content;\n`;\n\nconst Img = styled.img`\n  display: block;\n  width: auto;\n  height: 100%;\n`;\n\nconst thumbItems = files =>\n  files.map(file => (\n    <Thumb key={file.path}>\n      {console.log({ thumb: file.path })}\n      <ThumbInner>\n        <Img\n          src={file.preview}\n          onLoad={() => {\n            URL.revokeObjectURL(file.preview);\n          }}\n          alt={file.path}\n        />\n      </ThumbInner>\n    </Thumb>\n  ));\n\nconst FileDropArea = ({ files, setFiles }) => {\n  const onDrop = useCallback(\n    acceptedFiles => {\n      setFiles(\n        acceptedFiles.map(file => ({\n          ...file,\n          preview: URL.createObjectURL(file),\n        }))\n      );\n    },\n    [setFiles]\n  );\n\n  const {\n    acceptedFiles,\n    fileRejections,\n    getRootProps,\n    getInputProps,\n    isFocused,\n    isDragAccept,\n    isDragReject,\n    isDragActive,\n  } = useDropzone({\n    accept: {\n      'image/jpeg': [],\n      'image/png': [],\n    },\n    onDrop,\n  });\n\n  useEffect(() => {\n    // Make sure to revoke the data uris to avoid memory leaks, will run on unmount\n    return () => files.forEach(file => URL.revokeObjectURL(file.preview));\n  }, [files]);\n\n  return (\n    <>\n      <DropArea {...getRootProps({ isFocused, isDragAccept, isDragReject })}>\n        <input {...getInputProps()} />\n        {isDragActive && <p>Drop the files here</p>}\n        {isDragAccept && <p>All files will be accepted</p>}\n        {isDragReject && <p>Some files will be rejected</p>}\n\n        {!isDragActive && (\n          <>\n            <p>Drag 'n' drop some files here, or click to select files</p>\n            <em>(*.jpeg and *.png images)</em>\n          </>\n        )}\n      </DropArea>\n\n      <ThumbsContainer>\n        {acceptedFiles?.length > 0 && (\n          <ThumbList>{thumbItems(files)}</ThumbList>\n        )}\n\n        {acceptedFiles?.length > 0 && (\n          <>\n            <h3>Accepted files</h3>\n\n            <ul>{acceptedFileItems(acceptedFiles)}</ul>\n          </>\n        )}\n\n        {fileRejections?.length > 0 && (\n          <>\n            <h3>Rejected files</h3>\n            <ul>{rejectedFileItems(fileRejections)}</ul>\n          </>\n        )}\n      </ThumbsContainer>\n    </>\n  );\n};\n\nconst ContactsView = () => {\n  const lang = useLang();\n  const [files, setFiles] = useState([]);\n\n  const onSubmitUpload = useCallback(\n    async e => {\n      e.preventDefault();\n      const form = e.target;\n      // const file = form.elements.file.files[0];\n      console.log({ files });\n\n      if (!files.length) {\n        return toast.error('Please add file');\n      }\n\n      const formData = new FormData();\n      files.forEach(file => formData.append('image', file, file.name));\n\n      try {\n        await axios.post('/upload', formData).then(log).catch(error);\n      } catch (error) {\n        console.log(error);\n      }\n      form.reset();\n    },\n    [files]\n  );\n\n  return (\n    <Section>\n      <UploadContainer>\n        <SectionTitle>{lang.upload}</SectionTitle>\n\n        <UploadForm onSubmit={onSubmitUpload}>\n          <FileDropArea files={files} setFiles={setFiles} />\n\n          <Button type=\"submit\" variant=\"contained\">\n            {lang.uploadView.addFileButtonLabel}\n          </Button>\n        </UploadForm>\n      </UploadContainer>\n    </Section>\n  );\n};\n\nContactsView.propTypes = {};\n\nexport default ContactsView;\n"],"names":["UploadContainer","styled","Container","UploadForm","console","log","error","DropArea","props","isDragAccept","isDragReject","isFocused","getColor","theme","colors","accent","transition","acceptedFileItems","acceptedFiles","map","file","path","Math","ceil","size","ThumbsContainer","ThumbList","Thumb","ThumbInner","Img","thumbItems","files","thumb","src","preview","onLoad","URL","revokeObjectURL","alt","FileDropArea","rejectedFiles","setFiles","onDrop","useCallback","createObjectURL","useDropzone","accept","fileRejections","getRootProps","getInputProps","isDragActive","useEffect","forEach","length","errors","name","e","code","message","lang","useLang","useState","onSubmitUpload","preventDefault","form","target","toast","formData","FormData","append","axios","then","catch","reset","upload","onSubmit","type","variant","uploadView","addFileButtonLabel"],"sourceRoot":""}